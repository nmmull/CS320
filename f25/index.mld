{0 CAS CS 320: Concepts of Programming Languages (UNDER CONSTRUCTION)}

CAS CS 320 is a course {e about} programming languages, particularly the {b design} and {b implementation} of programming languages.
In this course, we take up the programming language as an {e object of formal study}.
This course is {e not} about how to program, though the principles we cover are generally useful for writing and reasoning about programs.

The first part of the course is on functional programming in {{: https://ocaml.org/ }OCaml}, based on {i CS 3110: Data Structures and Functional Programming} at Cornell University and its associated {{: https://cs3110.github.io/textbook/cover.html }textbook} (referred to as OCP below).
Its topics include algebraic data types, higher-order functions, and polymorphism.
It's during this part that we learn to {e think} functionally, to view programs not as sequences of commands manipulating global state, but as compositions of functions that deconstruct and reorient data.

In the second part of the course we {e implement} several interpreters for various fragments of OCaml; that is, we write OCaml programs that {i execute} OCaml programs.
The topics covered include parsing, operational semantics, variable scope, type checking and type inference.
By the end of the course, you'll be able to execute some of the simpler programs we wrote in the first part of the course using your own interpreter.

{1 Important Links}

- Syllabus
- Piazza
- Gradescope
- Course Repository
- Course Standard Library
- Office Hours Calendar

{1 Schedule}

{table
  {tr
    {th Date}
    {th Topic}
    {th Reading}
    {th Assignments}
  }
  {tr
    {td 9/2}
    {td Course Overview}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/intro/past.html}1.1},
      {{: https://cs3110.github.io/textbook/chapters/intro/present.html}1.2},
      {{: https://cs3110.github.io/textbook/chapters/intro/future.html}1.3},
      {{: https://cs3110.github.io/textbook/chapters/basics/toplevel.html}2.1},
      {{: https://cs3110.github.io/textbook/chapters/basics/expressions.html}2.3}
    }
    {td }
  }
  {tr
    {td 9/3}
    {td Lab 1: Installation Party}
    {td }
    {td }
  }
  {tr
    {td 9/4}
    {td Basics I: Introducing OCaml}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/basics/compiling.html}2.2},
      {{: https://cs3110.github.io/textbook/chapters/basics/functions.html}2.4},
      {{: https://cs3110.github.io/textbook/chapters/basics/printing.html}2.6},
      {{: https://cs3110.github.io/textbook/chapters/basics/debugging.html}2.7}
    }
    {td Assignment 1}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 2 ================ %}}}

  {tr
    {td 9/9}
    {td Basics II: Desiging functions}
    {td }
    {td }
  }
  {tr
    {td 9/10}
    {td Lab 2: OCaml Party}
    {td }
    {td }
  }
  {tr
    {td 9/11}
    {td Basics III: Inference Rules}
    {td }
    {td Assignment 2 (A1 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 3 ================ %}}}

  {tr
    {td 9/16}
    {td Basics IV: Lists, Tail-Recursion}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/data/lists.html}3.1},
      {{: https://cs3110.github.io/textbook/chapters/data/pattern_matching_advanced.html}3.5},
      {{: https://cs3110.github.io/textbook/chapters/data/options.html}3.7},
      {{: https://cs3110.github.io/textbook/chapters/data/assoc_list.html}3.8}
    }
    {td }
  }
  {tr
    {td 9/17}
    {td Lab 3: Recursion Classics}
    {td }
    {td }
  }
  {tr
    {td 9/18}
    {td Basics V: Derivations}
    {td }
    {td Assignment 3 (A2 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 4 ================ %}}}

  {tr
    {td 9/23}
    {td Data I: Unions and Products}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/data/variants.html}3.2},
      {{: https://cs3110.github.io/textbook/chapters/data/records_tuples.html}3.4},
      {{: https://cs3110.github.io/textbook/chapters/data/algebraic_data_types.html}3.9}
    }
    {td }
  }
  {tr
    {td 9/24}
    {td Lab 4: TSV Reader}
    {td }
    {td }
  }
  {tr
    {td 9/25}
    {td Data II: Algebraic Data Types}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/data/type_synonym.html}3.6},
      {{: https://cs3110.github.io/textbook/chapters/data/algebraic_data_types.html}3.9},
      {{: https://cs3110.github.io/textbook/chapters/data/trees.html}3.11},
      {{: https://cs3110.github.io/textbook/chapters/ds/rb.html}8.3}
    }
    {td Assignment 4 (A3 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 5 ================ %}}}

  {tr
    {td 9/30}
    {td HOP I: Maps and Filters}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/hop/higher_order.html}4.1},
      {{: https://cs3110.github.io/textbook/chapters/hop/map.html}4.2},
      {{: https://cs3110.github.io/textbook/chapters/hop/filter.html}4.3},
      {{: https://cs3110.github.io/textbook/chapters/hop/currying.html}4.7}
    }
    {td }
  }
  {tr
    {td 10/1}
    {td Lab 5: S-Expressions}
    {td }
    {td }
  }
  {tr
    {td 10/2}
    {td HOP II: Folds}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/hop/fold.html}4.4},
      {{: https://cs3110.github.io/textbook/chapters/hop/beyond_lists.html}4.5}
    }
    {td Assignment 5 (A4 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 6 ================ %}}}

  {tr
    {td 10/7}
    {td OCaml I: Error Handling, Testing}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/data/ounit.html}3.3},
      {{: https://cs3110.github.io/textbook/chapters/data/exceptions.html}3.10}
    }
    {td }
  }
  {tr
    {td 10/8}
    {td Lab 5: When2meet}
    {td }
    {td }
  }
  {tr
    {td 10/9}
    {td OCaml II: Modules}
    {td OCP
      {{: https://cs3110.github.io/textbook/chapters/modules/module_systems.html}5.1},
      {{: https://cs3110.github.io/textbook/chapters/modules/modules.html}5.2},
      {{: https://cs3110.github.io/textbook/chapters/modules/toplevel.html}5.3},
      {{: https://cs3110.github.io/textbook/chapters/modules/encapsulation.html}5.4},
      {{: https://cs3110.github.io/textbook/chapters/modules/functional_data_structures.html}5.5}
    }
    {td Practice Midterm (A5 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 7 ================ %}}}

  {tr
    {td 10/14}
    {td {b No Lecture (Substitute Monday)}}
    {td }
    {td }
  }
  {tr
    {td 10/15}
    {td Lab 7: Midterm Review}
    {td }
    {td }
  }
  {tr
    {td 10/16}
    {td {b Midterm}}
    {td }
    {td Assignment 6}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 8 ================ %}}}

  {tr
    {td 10/21}
    {td Parsing I: In Theory}
    {td }
    {td }
  }
  {tr
    {td 10/22}
    {td Lab 6: Formal Grammar Worksheet}
    {td }
    {td }
  }
  {tr
    {td 10/23}
    {td Parsing II: In Practice}
    {td }
    {td Mini-Project 1 (A6 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 9 ================ %}}}

  {tr
    {td 10/28}
    {td Semantics I: Operational Semantics}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/calculator.html}9.1}}
    {td }
  }
  {tr
    {td 10/29}
    {td Lab 8: Parser Generators}
    {td }
    {td }
  }
  {tr
    {td 10/30}
    {td Semantics II: Substitution}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/substitution.html}9.3}}
    {td MP1 Check-in due}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 10 ================ %}}}

  {tr
    {td 11/4}
    {td Semantics III: Variables, Scope, Closures}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/environment.html#lexical-vs-dynamic-scope}9.4}}
    {td }
  }
  {tr
    {td 11/5}
    {td Lab 9: Operational Semantics Worksheet}
    {td }
    {td }
  }
  {tr
    {td 11/6}
    {td Semantics IV: Environments}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/environment.html#lexical-vs-dynamic-scope}9.4}}
    {td Mini-Project 2 (MP1 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 11 ================ %}}}

  {tr
    {td 11/11}
    {td Types I: Simple Types}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/typecheck.html}9.5}}
    {td }
  }
  {tr
    {td 11/12}
    {td Lab 10: An Imperative Language}
    {td }
    {td }
  }
  {tr
    {td 11/13}
    {td Types II: Progress and Preservation}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/typecheck.html}9.5}}
    {td MP2 Check-in due}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 12 ================ %}}}

  {tr
    {td 11/18}
    {td Types III: Polymorphism}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/typecheck.html}9.5}}
    {td }
  }
  {tr
    {td 11/19}
    {td Lab 11: Closures Worksheet}
    {td }
    {td }
  }
  {tr
    {td 11/20}
    {td Inference I: Hindley-Milner (Light)}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/inference.html}9.6}}
    {td Mini-Project 3 (MP2 due)}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 13 ================ %}}}

  {tr
    {td 11/25}
    {td Inference II: Unification}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/inference.html}9.6}}
    {td }
  }
  {tr
    {td 11/26}
    {td {b No Lab} (Thanksgiving Recess)}
    {td }
    {td }
  }
  {tr
    {td 11/27}
    {td {b No Lecture} (Thanksgiving Recess)}
    {td }
    {td }
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 14 ================ %}}}

  {tr
    {td 12/2}
    {td Inference III: Constraint-Based Inference}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/inference.html}9.6}}
    {td }
  }
  {tr
    {td 12/3}
    {td Lab 12: Type Inference Worksheet}
    {td }
    {td }
  }
  {tr
    {td 12/4}
    {td Inference IV: Extended Example}
    {td OCP {{: https://cs3110.github.io/textbook/chapters/interp/inference.html}9.6}}
    {td MP3 Check-in due}
  }

  {tr {td } {td } {td } {td {%comment: ================ WEEK 14 ================ %}}}

  {tr
    {td 12/9}
    {td Advanced: Byte-Code Interpretion}
    {td }
    {td }
  }
  {tr
    {td 12/10}
    {td Lab 15: Final Exam Review}
    {td }
    {td MP3 due}
  }
  {tr {td } {td } {td } {td }}
  {tr
    {td TBD}
    {td {b Final Exam}}
    {td }
    {td }
  }
}
